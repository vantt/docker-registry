
version: '3.7'

networks: 
  docker_registry: {}
  # proxy:
  #       external: true
  #       name: https-proxy

volumes:
    registry-data: # the real name will be <parent-folder-name>_registry-data (dash '-' int he folder name will be removed). eg. authenticatedregistry_registry-data
      name: registry-data
      external: true

services:
    registry:
        image: ${REGISTRY_IMAGE}
        #container_name: registry
        ports:
           - 5000:5000
        volumes:
          - ./config/htpasswd:/htpasswd:ro
          - ./certs:/certs
          - registry-data:/var/lib/registry
        restart: always
        networks:
          - docker_registry
          #- proxy
        deploy:
          mode: global
          placement:

        environment:
          - REGISTRY_STORAGE_DELETE_ENABLED=true
          
          - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry
          - REGISTRY_AUTH=htpasswd
          - REGISTRY_AUTH_HTPASSWD_REALM="docker-registry-realm"
          - REGISTRY_AUTH_HTPASSWD_PATH="/htpasswd"

          # REGISTRY_HTTP_TLS_CERTIFICATE=./certs/registry_auth.crt \
          # REGISTRY_HTTP_TLS_KEY=./certs/registry_auth.key \
        labels:  
        # https://docs.traefik.io/reference/dynamic-configuration/docker/
        # https://docs.traefik.io/routing/providers/docker/
        - traefik.enable=true # expose this container through traefik
        - traefik.http.services.registry.loadbalancer.server.port=5000

        # http route, redirect to https
        # - traefik.http.routers.registry_http.entrypoints=http
        # - traefik.http.routers.registry_http.rule=Host(`registry.dev.mz`)
        # - traefik.http.routers.registry_http.middlewares=force-https@file

        # https route
        - traefik.http.routers.registry_https.entrypoints=https
        - traefik.http.routers.registry_https.rule=Host(`registry.dev.mz`)
        - traefik.http.routers.registry_https.tls=true
        - traefik.http.routers.registry_https.service=registry